#include"stm32f10x.h"
  void led_gpio_init();//led灯的gpio函数的声明
  void key_gpio_init();
  void NVIC_Configration();//中断控制初始化
  void EXTI_Configration();//中断初始化
  void delay();//消抖延时初始化
void main()
{  
  RCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOA,ENABLE);/*使能a口gpio的rcc时钟*/
  RCC_APB2PeriphClockCmd( RCC_APB2Periph_AFIO,ENABLE);//外部复用功能时钟
  key_gpio_init();//键盘函数的调用
  led_gpio_init();
  EXTI_Configration();//中断函数的配置
  NVIC_Configration();//中断控制函数初始化
  while(1);//等待
  
}
   void led_gpio_init()
{
     //led
       GPIO_InitTypeDef GPIO_InitStructure;//定义结构体
       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//定义引脚速度
       GPIO_InitStructure.GPIO_Pin=GPIO_Pin_7;//定义引脚
       GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP;//定义输出模式
       GPIO_Init(GPIOA,&GPIO_InitStructure);//初始化
}
  void key_gpio_init()
{    
      //key
      RCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOB,ENABLE);/*使能b口gpio的rcc时钟*/
      GPIO_InitTypeDef GPIO_InitStructure;//定义结构体
      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//定义引脚速度
      GPIO_InitStructure.GPIO_Pin=GPIO_Pin_7;//定义读取引脚
      GPIO_InitStructure.GPIO_Mode=GPIO_Mode_IPU;//定义上拉输入模式
      GPIO_Init(GPIOB,&GPIO_InitStructure);//初始化
}
   void EXTI_Configration()//外部中断初始化
  {
     EXTI_InitTypeDef  EXTI_InitStructure;
     EXTI_ClearITPendingBit(EXTI_Line7);//////
    // EXTI_ClearITpendingBit(EXTI_Line7); p的大小写
     GPIO_EXTILineConfig(GPIO_PortSourceGPIOB, GPIO_PinSource7);//连接外部中断和引脚的关系/////
    //后面语句为固件库里面的有错误GPIO_EXTILineConfig(GPIO_PortSource_GPIOB, GPIO_PinSource8);
     EXTI_InitStructure.EXTI_Line = EXTI_Line7;//PB7在EXIT7上
     EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;//模式为中断
     EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;//下降沿触发
     EXTI_InitStructure.EXTI_LineCmd = ENABLE;//使能
     EXTI_Init(&EXTI_InitStructure);//初始化
  }
   void NVIC_Configration()//嵌套向量中断控制器
   {
   NVIC_InitTypeDef NVIC_InitStructure;//定义结构体
   NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);//选择优先级组
   NVIC_InitStructure.NVIC_IRQChannel = EXTI9_5_IRQn;//////////////定义属于第7组的中断频道
   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;//抢占式优先级位
   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;//从优先级位
   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;//使能
   NVIC_Init(&NVIC_InitStructure);////////初始化
   }
   void delay()//延时函数1ms
   {
       int i=720000;
       for(;i>=0;i--);
   }
   void EXTI9_5_IRQHandler()//中断函数行使函数
  {
      if(EXTI_GetITStatus(EXTI_Line7)==SET)//判断中断是否触发
      {
        EXTI_ClearITPendingBit(EXTI_Line7);//清空挂载在7线上的中断
        delay();//延时消抖
       {
         if(GPIO_ReadOutputDataBit(GPIOA, GPIO_Pin_7)==1)//引脚高低电平读取函数
          {
            GPIO_ResetBits(GPIOA,GPIO_Pin_7);
            //a7口为高电平
          }
          else
          { 
           GPIO_SetBits(GPIOA,GPIO_Pin_7);  //a7口为低电平
          }
       }
      }
  
  }