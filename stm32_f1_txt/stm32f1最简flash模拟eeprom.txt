  #include"stm32f10x.h"
  #include<stdio.h>

  void USART_gpio_init();//led灯的gpio函数的声明
  void USART_Configuration();
  void RCC_Configuration(); 
  void delay();
  u32 data=12345678;
  void main()
{    
  
  RCC_Configuration();
  USART_gpio_init();
  USART_Configuration();
  FLASH_Unlock();//解锁flash
  FLASH_ClearFlag(FLASH_FLAG_BSY|FLASH_FLAG_EOP|FLASH_FLAG_PGERR|FLASH_FLAG_WRPRTERR);//清除忙标识
  FLASH_ErasePage(0x0801FC00);//擦除起始地址页
  FLASH_ProgramWord(0x0801FC00,data);//向指定地址写入数值
  FLASH_Lock();//锁定flash
  data=0;
  data=(*(volatile uint32_t *)(0x0801FC00));//取出地址的值，固定格式
  while(1)
  {
    printf("%d\t",data);
    delay();
  }                         
}
    int fputc(int ch,FILE *f)
   {
   //ch送给USART1
    USART_SendData(USART1, ch);
    //等待发送完毕
    while(USART_GetFlagStatus(USART1, USART_FLAG_TC)==RESET) { }
    //返回ch
    return(ch);
    }
  
    void RCC_Configuration()
    {
        SystemInit();
        RCC_APB2PeriphClockCmd( RCC_APB2Periph_AFIO,ENABLE);//外部复用功能时钟
        RCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOA,ENABLE);/*使能a口gpio的rcc时钟*/
        RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);        
    }
    void USART_gpio_init()
{      
       
       GPIO_InitTypeDef GPIO_InitStructure;//定义结构体
       //pa9为ua1的tx端  
       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//定义引脚速度
       GPIO_InitStructure.GPIO_Pin=GPIO_Pin_9;//定义引脚
       GPIO_InitStructure.GPIO_Mode=GPIO_Mode_AF_PP;//定义输出模式
       GPIO_Init(GPIOA,&GPIO_InitStructure);//初始化
       //pa10为ua1的rx端
       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//定义引脚速度
       GPIO_InitStructure.GPIO_Pin=GPIO_Pin_10;//定义引脚
       GPIO_InitStructure.GPIO_Mode=GPIO_Mode_IN_FLOATING;//定义输出模式
       GPIO_Init(GPIOA,&GPIO_InitStructure);//初始化      
            
}
   
   void USART_Configuration()
   {
   
    USART_InitTypeDef USART_InitStructure;
    USART_InitStructure.USART_BaudRate = 9600;
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
    USART_InitStructure.USART_StopBits = USART_StopBits_1;
    USART_InitStructure.USART_Parity = USART_Parity_No;
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
    USART_InitStructure.USART_Mode = USART_Mode_Tx;
    USART_Init(USART1,&USART_InitStructure);  
    USART_Cmd(USART1,ENABLE);//使能外设   
    USART_ClearFlag(USART1,USART_FLAG_TC);//清除待处理标志位USART_Cmd(USART1,ENABLE);//使能外设
    
   }


     void delay()
     {
         int i=0;
         for(i=0;i<=1200000;i++);
     }